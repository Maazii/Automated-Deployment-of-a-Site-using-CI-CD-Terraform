pipeline {
    agent any

    environment {
        TF_CLI_ARGS="-no-color"
    }

    options {
        ws("D:\\Automated-Deployment-of-a-Site-using-CI-CD-and-Terraform\\infrastructure-code")
    }
    
    stages {
        stage("Check Terraform Version"){
            steps{
                powershell "terraform version"
            }
        }
        stage("Check for running instances"){
            steps{
                powershell '''
                    $holder = aws ec2 describe-instances --query "length(Reservations[*].Instances[*])"
                    if ($holder -ne "0") {
                    Write-Output "Yes! There are instances running!"
                    }
                    else {
                    Write-Output "No! There are no instances running!"
                    } 
                '''
            }
        }
        // stage("Locate, Initialize, Validate, and Plan Infrastructure"){
        //     steps{
        //         powershell '''
        //             if (Test-path .terraform) {
        //                 Write-Output "Terraform already initialized!"
        //                 terraform validate
        //                 terraform plan
        //             }
        //             else {
        //                 terrafrom init
        //                 terraform validate
        //                 terraform plan
        //             }
        //         '''
        //     }
        // }
        // stage("Add Infrastructure"){
        //     steps{
        //         powershell "terraform apply -auto-approve"
        //     }
        // }
    }
}